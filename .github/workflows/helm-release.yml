name: Release Helm Chart

on:
  push:
    tags:
      - 'chart-v*.*.*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  CHART_PATH: ./charts/deployment-inspector

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Extract version from tag
        id: get_version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/chart-v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/chart-}
          else
            VERSION="v0.1.0"
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "Chart version: ${VERSION}"

      - name: Update Chart.yaml version
        run: |
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          VERSION_WITHOUT_V="${VERSION#v}"
          sed -i "s/^version:.*/version: ${VERSION_WITHOUT_V}/" ${{ env.CHART_PATH }}/Chart.yaml
          echo "Updated Chart.yaml with version: ${VERSION_WITHOUT_V}"
          cat ${{ env.CHART_PATH }}/Chart.yaml

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Package Helm chart
        run: |
          helm package ${{ env.CHART_PATH }}
          ls -la *.tgz

      - name: Push Helm chart to OCI registry
        run: |
          CHART_VERSION="${{ steps.get_version.outputs.VERSION }}"
          helm push deployment-inspector-*.tgz oci://${{ env.REGISTRY }}/takutakahashi/charts
          echo "Chart pushed to: oci://${{ env.REGISTRY }}/takutakahashi/charts/deployment-inspector:${CHART_VERSION}"

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: deployment-inspector-*.tgz
          generate_release_notes: true
          body: |
            ## Helm Chart Release ${{ steps.get_version.outputs.VERSION }}
            
            ### Installation
            ```bash
            helm install deployment-inspector oci://ghcr.io/takutakahashi/charts/deployment-inspector --version ${{ steps.get_version.outputs.VERSION }}
            ```
            
            ### Upgrade
            ```bash
            helm upgrade deployment-inspector oci://ghcr.io/takutakahashi/charts/deployment-inspector --version ${{ steps.get_version.outputs.VERSION }}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}